#!/usr/bin/env python3
# Usage:
#   python json_to_js.py data.json data.js
# If the second arg is omitted, it writes to "data.js".

import sys, json
from pathlib import Path
from datetime import datetime

def main():
    if len(sys.argv) < 2:
        print("Usage: python json_to_js.py <input.json> [output.js]")
        sys.exit(1)

    in_path = Path(sys.argv[1])
    out_path = Path(sys.argv[2]) if len(sys.argv) > 2 else Path("data.js")

    if not in_path.exists():
        print(f"❌ Not found: {in_path}")
        sys.exit(1)

    try:
        raw = in_path.read_text(encoding="utf-8-sig")
        data = json.loads(raw)  # validate JSON
    except Exception as e:
        print(f"❌ Failed to read/parse JSON: {e}")
        sys.exit(1)

    # Minified JSON; escape </script> to be safe in inline contexts
    body = json.dumps(data, ensure_ascii=False, separators=(",", ":")).replace("</script>", "<\\/script>")

    js = (
        "/* Auto-generated by json_to_js.py on " + datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "\n"
        f" * Source: {in_path.name}\n"
        " */\n"
        "window.CM_DATA = " + body + ";\n"
    )

    out_path.write_text(js, encoding="utf-8")
    print(f"✅ Wrote {out_path.resolve()}")

if __name__ == "__main__":
    main()
